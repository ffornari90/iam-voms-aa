version: "3.7"

volumes:
  data:
  trustanchors:
  cabundle:
  certs:
  scripts:
  conf.d:
  letsencrypt:

networks:
  net:

services:
  proxy:
    container_name: proxy
    image: harbor.cloud.infn.it/cache/library/traefik:${TRAEFIK_VERSION:-latest}
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /opt/storageservice/traefik:/config

    links:
      - "trust:trust"
      - "iam-be:iam-be"
      - "client:client"

    ports:
      - "80:80"
      - "443:443"

    command: /bin/sh -c "
        while ! nc -z trust 8086 ; do sleep 1 ; done
        && while ! nc -z iam-be 8080 ; do sleep 1 ; done
        && while ! nc -z client 8080 ; do sleep 1 ; done
        && traefik
        --log.level=DEBUG
        --api.insecure=true
        --providers.docker=true
        --providers.docker.exposedbydefault=false
        --providers.file.directory=/config
        --providers.file.watch=true
        --entrypoints.web.address=:80
        --entrypoints.websecure.address=:443
        --entrypoints.web.http.redirections.entryPoint.to=websecure
        --certificatesresolvers.myhttpchallenge.acme.httpchallenge=true
        --certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web
        --certificatesresolvers.myhttpchallenge.acme.email=${CONTACT_EMAIL}
        --certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json
        --certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      "

    networks:
      - net

  sidecar:
    image: ffornari/sidecar:latest
    container_name: sidecar
    command: /bin/bash -c "
        cp /wait-for-it.sh /scripts
        && cp /application.yml /conf.d
        && sleep infinity
      "

    volumes:
      - scripts:/scripts
      - conf.d:/conf.d
      - certs:/etc/ssl/certs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    environment:
      VO: ${VO_NAME}
      HOST_CERT_URL: ${IAM_CERT_URL}
      IAM_HOST: ${HOST_PUBLIC_IP}.myip.cloud.infn.it

    networks:
      - net

  trust:
    image: indigoiam/egi-trustanchors:latest
    container_name: trust
    hostname: trust
    entrypoint:
      /bin/sh -c "
        yum install -y epel-release
        && yum install -y netcat
        && /update-trust-anchors.sh
        && echo '# GEANT eScience Personal CA 4' | tee -a /etc/pki/tls/certs/ca-bundle.crt
        && cat /etc/grid-security/certificates/GEANTeSciencePersonalCA4.pem | tee -a /etc/pki/tls/certs/ca-bundle.crt
        && nc -k -l 8086
      "

    environment:
      FORCE_TRUST_ANCHORS_UPDATE: 1

    volumes:
      - trustanchors:/etc/grid-security/certificates
      - cabundle:/etc/pki
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    networks:
      - net

  db:
    container_name: db
    hostname: db
    image: mysql:5.7
    volumes:
      - data:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PWD:-pwd}
      MYSQL_USER: ${MYSQL_USERNAME:-iam}
      MYSQL_PASSWORD: ${MYSQL_PWD:-pwd}
      MYSQL_DATABASE: ${MYSQL_DB:-iam}

    networks:
      - net

  iam-be:
    image: indigoiam/iam-login-service:${IAM_VERSION:-v1.8.0}
    container_name: iam-be
    hostname: iam-be
    links:
      - "db:db"

    command: /bin/bash -c "
        /scripts/wait-for-it.sh -t 0 db:3306
        && if [[ $$IAM_VERS =~ \"v1.6.\" ]]; then java $$IAM_JAVA_MEM_OPTS $$IAM_JAVA_OPTS -jar iam-login-service.war;
         elif [[ $$IAM_VERS =~ \"v1.7.\" ]]; then java $$IAM_JAVA_MEM_OPTS $$IAM_JAVA_OPTS -jar iam-login-service.war;
         elif [[ $$IAM_VERS =~ \"v1.8.\" ]]; then java $$IAM_JAVA_OPTS org.springframework.boot.loader.WarLauncher;
         else echo 'IAM version '$$IAM_VERS' is not available'; fi
      "

    environment:
      IAM_JAVA_OPTS: -Djava.security.egd=file:/dev/./urandom -Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n,address=1044 -Dspring.profiles.active=prod,registration
      IAM_JAVA_MEM_OPTS: -XX:MaxRAMFraction=1 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
      IAM_VERS: ${IAM_VERSION:-v1.8.0}
      IAM_HOST: ${HOST_PUBLIC_IP}.myip.cloud.infn.it
      IAM_BASE_URL: https://${HOST_PUBLIC_IP}.myip.cloud.infn.it
      IAM_ISSUER: https://${HOST_PUBLIC_IP}.myip.cloud.infn.it/
      IAM_USE_FORWARDED_HEADERS: "true"
      IAM_NOTIFICATION_DISABLE: "true"
      IAM_DB_HOST: ${MYSQL_DB:-db}
      IAM_DB_USERNAME: ${MYSQL_USERNAME:-iam}
      IAM_DB_PASSWORD: ${MYSQL_PWD:-pwd}

    volumes:
      - scripts:/scripts
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.iam-redirect-ssl.redirectscheme.scheme=https"
      - "traefik.http.routers.iam-nossl.middlewares=iam-redirect-ssl"
      - "traefik.http.routers.iam-nossl.rule=Host(`${HOST_PUBLIC_IP}.myip.cloud.infn.it`)"
      - "traefik.http.routers.iam-nossl.entrypoints=web"
      - "traefik.http.routers.iam.rule=Host(`${HOST_PUBLIC_IP}.myip.cloud.infn.it`)"
      - "traefik.http.routers.iam.entrypoints=websecure"
      - "traefik.http.routers.iam.tls.certresolver=myhttpchallenge"
      - "traefik.http.routers.iam.tls=true"
      - "traefik.http.services.iam.loadbalancer.server.port=8080"

    networks:
      - net

    depends_on:
      - sidecar

  client:
    image: indigoiam/iam-test-client:latest
    container_name: client
    hostname: client
    environment:
      IAM_CLIENT_PORT: 8080
    networks:
      - net
