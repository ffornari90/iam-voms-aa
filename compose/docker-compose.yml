version: "3.7"

volumes:
  data:
  trustanchors:
  cabundle:
  certs:
  scripts:
  conf.d:

services:
  sidecar:
    image: ffornari/sidecar:latest
    container_name: sidecar
    command: /bin/bash -c "
        cp /wait-for-it.sh /scripts
        && cp /application.yml /conf.d
        && envsubst '$${IAM_HOST}' < /voms-ng.conf > /conf.d/voms-ng.conf
        && if [[ ! -z \"$$HOST_PRIV_KEY\" ]]; then echo $$HOST_PRIV_KEY | base64 -d | tee /etc/ssl/certs/hostkey.pem;
           else echo \"ERROR\"':'\" private key for IAM server NOT set\"'!'; fi
        && if [[ ! -z \"$$HOST_CERT_URL\" ]]; then curl \"$${HOST_CERT_URL}\" -o /etc/ssl/certs/hostcert.pem;
           export HOST_CERT_SUBJECT=$$(openssl x509 -in /etc/ssl/certs/hostcert.pem -noout -subject | awk -F\"subject= \" '{print $$2}');
           export HOST_CERT_ISSUER=$$(openssl x509 -in /etc/ssl/certs/hostcert.pem -noout -issuer | awk -F\"issuer= \" '{print $$2}');
           envsubst '$${VO},$${IAM_HOST},$${HOST_CERT_SUBJECT}' < /vomses.template > /conf.d/$$VO;
           envsubst '$${HOST_CERT_SUBJECT},$${HOST_CERT_ISSUER}' < /lsc.template > /conf.d/$$IAM_HOST.lsc;
           else echo \"ERROR\"':'\" certificate for IAM server NOT set\"'!'; fi
        && sleep infinity
      "

    volumes:
      - scripts:/scripts
      - conf.d:/conf.d
      - certs:/etc/ssl/certs

    environment:
      VO: ${VO_NAME:-test.vo}
      HOST_PRIV_KEY: ${IAM_PRIV_KEY}
      HOST_CERT_URL: ${IAM_CERT_URL}
      IAM_HOST: ${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}

  trust:
    image: indigoiam/egi-trustanchors:latest
    container_name: trust
    hostname: trust
    entrypoint:
      /bin/sh -c "
        yum install -y epel-release
        && yum install -y netcat
        && /update-trust-anchors.sh
        && echo '# GEANT eScience Personal CA 4' | tee -a /etc/pki/tls/certs/ca-bundle.crt
        && cat /etc/grid-security/certificates/GEANTeSciencePersonalCA4.pem | tee -a /etc/pki/tls/certs/ca-bundle.crt
        && nc -k -l 8086
      "

    environment:
      FORCE_TRUST_ANCHORS_UPDATE: 1

    volumes:
      - trustanchors:/etc/grid-security/certificates
      - cabundle:/etc/pki

  db:
    container_name: db
    hostname: db
    image: mysql:5.7
    volumes:
      - data:/var/lib/mysql

    environment:
      TZ: Europe/Rome
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PWD:-pwd}
      MYSQL_USER: ${MYSQL_USERNAME:-iam}
      MYSQL_PASSWORD: ${MYSQL_PWD:-pwd}
      MYSQL_DATABASE: ${MYSQL_DB:-iam}

  iam-be:
    image: indigoiam/iam-login-service:${IAM_VERSION:-v1.6.0}
    container_name: iam-be
    hostname: iam-be
    links:
      - "db:db"

    command: /bin/bash -c "
        /scripts/wait-for-it.sh -t 0 db:3306
        && if [[ $$IAM_VERS =~ \"v1.6.\" ]]; then java $$IAM_JAVA_MEM_OPTS $$IAM_JAVA_OPTS -jar iam-login-service.war;
         elif [[ $$IAM_VERS =~ \"v1.7.\" ]]; then java $$IAM_JAVA_MEM_OPTS $$IAM_JAVA_OPTS -jar iam-login-service.war;
         elif [[ $$IAM_VERS =~ \"v1.8.\" ]]; then java $$IAM_JAVA_OPTS org.springframework.boot.loader.WarLauncher;
         else echo 'IAM version '$$IAM_VERS' is not available'; fi
      "

    environment:
      TZ: Europe/Rome
      IAM_JAVA_OPTS: -Djava.security.egd=file:/dev/./urandom -Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n,address=1044 -Dspring.profiles.active=prod,registration
      IAM_JAVA_MEM_OPTS: -XX:MaxRAMFraction=1 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
      IAM_VERS: ${IAM_VERSION:-v1.6.0}
      IAM_HOST: ${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}
      IAM_BASE_URL: https://${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}
      IAM_ISSUER: https://${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}/
      IAM_USE_FORWARDED_HEADERS: "true"
      IAM_NOTIFICATION_DISABLE: "true"
      IAM_DB_HOST: ${MYSQL_DB:-db}
      IAM_DB_USERNAME: ${MYSQL_USERNAME:-iam}
      IAM_DB_PASSWORD: ${MYSQL_PWD:-pwd}

    volumes:
      - scripts:/scripts

    depends_on:
      - sidecar

  client:
    image: indigoiam/iam-test-client:latest
    container_name: client
    hostname: client
    environment:
      IAM_CLIENT_PORT: 8080

  nginx-iam:
    image: indigoiam/nginx:latest
    container_name: nginx-iam
    hostname: nginx-iam
    links:
      - "trust:trust"
      - "iam-be:iam-be"
      - "client:client"

    command: /bin/sh -c "
        cp /certs/hostcert.pem /etc/ssl/certs/iam.cert.pem
        && cp /certs/hostkey.pem /etc/ssl/private/iam.key.pem
        && /scripts/wait-for-it.sh -t 0 trust:8086
        && /scripts/wait-for-it.sh -t 0 iam-be:8080
        && /scripts/wait-for-it.sh -t 0 client:8080
        && nginx -g 'daemon off;'
      "

    volumes:
      - certs:/certs
      - scripts:/scripts

    environment:
      TZ: Europe/Rome

    ports:
      - "443:443"
      - "80:80"

    depends_on:
      - sidecar

  voms-aa:
    image: indigoiam/voms-aa:latest
    container_name: voms-aa
    hostname: ${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}
    links:
      - "nginx-iam:nginx-iam"

    entrypoint:
      /bin/sh -c "
        cp /conf.d/application.yml /app/resources/
        && /scripts/wait-for-it.sh -t 0 nginx-iam:443
        && java -cp @/app/jib-classpath-file it.infn.mw.voms.VomsService
      "

    environment:
      TZ: Europe/Rome
      VO: ${VO_NAME:-test.vo}
      IAM_HOST: ${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}
      IAM_DB_HOST: ${MYSQL_DB:-db}
      IAM_DB_USERNAME: ${MYSQL_USERNAME:-iam}
      IAM_DB_PASSWORD: ${MYSQL_PWD:-pwd}

    volumes:
      - certs:/etc/grid-security/voms
      - trustanchors:/etc/grid-security/certificates
      - scripts:/scripts
      - conf.d:/conf.d

    depends_on:
      - sidecar

  nginx-voms:
    image: indigoiam/openresty-voms:latest
    container_name: nginx-voms
    links:
      - "voms-aa:voms-aa"

    command: /bin/sh -c "
        /scripts/wait-for-it.sh -t 0 voms-aa:15000
        && /usr/local/openresty-voms/nginx/sbin/nginx -g 'daemon off;'
      "

    ports:
      - "15000:443"

    environment:
      TZ: Europe/Rome
      VO: ${VO_NAME:-test.vo}
      X509_VOMS_DIR: /vomsdir
      IAM_HOST: ${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}

    volumes:
      - cabundle:/etc/pki
      - trustanchors:/etc/grid-security/certificates
      - certs:/certs
      - scripts:/scripts
      - conf.d:/etc/nginx/conf.d

    depends_on:
      - sidecar

  voms-client:
    image: centos:7
    container_name: voms-client
    hostname: voms-client
    links:
      - "nginx-voms:nginx-voms"

    extra_hosts:
      - "${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}:host-gateway"

    command: /bin/bash -c "
        yum install -y epel-release
        && yum install -y voms-clients-java
        && mkdir -p /etc/grid-security/vomsdir/$$VO /etc/vomses /root/.globus
        && if [[ ! -z \"$$CLIENT_CERT_URL\" ]]; then curl \"$${CLIENT_CERT_URL}\" -o /root/.globus/usercert.pem;
           chmod 600 /root/.globus/usercert.pem;
           else echo \"WARNING\"':'\" certificate for VOMS client NOT set\"'!'; fi
        && if [[ ! -z \"$$CLIENT_PRIV_KEY\" ]]; then echo $$CLIENT_PRIV_KEY | base64 -d | tee /root/.globus/userkey.pem;
           chmod 400 /root/.globus/userkey.pem;
           else echo \"WARNING\"':'\" private key for VOMS client NOT set\"'!'; fi
        && /scripts/wait-for-it.sh -t 0 nginx-voms:443
        && cp /conf.d/$$IAM_HOST.lsc /etc/grid-security/vomsdir/$$VO/
        && cp /conf.d/$$VO /etc/vomses/
        && sleep infinity
      "

    environment:
      TZ: Europe/Rome
      VO: ${VO_NAME:-test.vo}
      CLIENT_PRIV_KEY: ${USER_PRIV_KEY}
      CLIENT_CERT_URL: ${USER_CERT_URL}
      IAM_HOST: ${IAM_FQDN:-iam-indigo.cr.cnaf.infn.it}

    volumes:
      - cabundle:/etc/pki
      - trustanchors:/etc/grid-security/certificates
      - scripts:/scripts
      - conf.d:/conf.d

    depends_on:
      - sidecar
